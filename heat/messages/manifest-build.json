{
  "commandDescription": "build manifest file with all metadata types in your org",
  "manifestFlagDescription": "[default: manifest/package.xml] manifest file",
  "wsdlFlagDescription": "[default: config/metadata.wsdl] Metadata API WSDL file",
  "environmentFlagDescription": "[default: config/environment.json] environment file",
  "betaFlagDescription": "set this flag if you would like to contain any beta components",
  "deletedFlagDescription": "set this flag if you would like to contain any deleted components",
  "deprecatedFlagDescription": "set this flag if you would like to contain any deprecated components",
  "deprecatededitableFlagDescription": "set this flag if you would like to contain any deprecatedEditable components",
  "installedFlagDescription": "set this flag if you would like to contain any installed components",
  "installededitableFlagDescription": "set this flag if you would like to contain any installedEditable components",
  "releasedFlagDescription": "set this flag if you would like to contain any released components",
  "unmanagedFlagDescription": "set this flag if you would like to contain any unmanaged components",
  "standardFlagDescription": "set this flag if you would like to contain any standard components",
  "recommendedFlagDescription": "set this flag if you would like to contain any standard, unmanaged, and child sub-components",
  "allFlagDescription": "set this flag if you would like to contain any all components",
  "childFlagDescription": "set this flag if you would like to contain any child sub-components",
  "errorNoApiversion": "Missing required flag: \n --apiversion \n See more help with --help",
  "errorInvalidEnvironment": "Missing required config file: \n --environment config/environment.json",
  "errorInvalidManifest": "Missing required config file: \n --manifest manifest/package.xml",
  "errorInvalidMetadataWsdl": "Missing required config file: \n --wsdl config/metadata.wsdl \n 1) download .wsdl from Salesforce: [Setup] > [Integrations] > [API] > [Generate Metadata WSDL] \n 2) locate it in your directory config/",
  "infoGetConnection": "getting connection",
  "infoCheckFlags": "checking flags",
  "infoAwaitBuildManifest": "building your manifest file",
  "infoCreateEnvironment": "creating environment file",
  "infoCreateManifest": "creating manifest file",
  "jsonEnvironment": "{\"docs\":{\"apexClass\":{\"externalReferences\":true,\"innerClasses\":true,\"properties\":true,\"methods\":true},\"apexTrigger\":{\"externalReferences\":true}},\"logs\":{\"root\":\".heat-logs\",\"prefix\":{\"listMetadata\":\".heat-logs/20.list-metadata\",\"metadataTypeMembers\":\".heat-logs/30.members\"},\"apex\":{\"rawData\":\".heat-logs/apex\"},\"apexClass\":{\"rawData\":\".heat-logs/apex-class\",\"symbolTable\":\".heat-logs/apex-class/symbol-table\"},\"apexTrigger\":{\"rawData\":\".heat-logs/apex-trigger\",\"symbolTable\":\".heat-logs/apex-trigger/symbol-table\"},\"createMetadataContainer\":\".heat-logs/apex/10.create-metadata-container.json\",\"retrieveApexClasses\":\".heat-logs/apex-class/11.retrieve-apex-classes.json\",\"createApexClassMembers\":\".heat-logs/apex-class/12.create-apex-class-members.json\",\"createContainerAsyncRequest\":\".heat-logs/apex/13.create-container-async-request.json\",\"retrieveContainerAsyncRequests\":\".heat-logs/apex/14.retrieve-container-async-requests.json\",\"retrieveApexTriggers\":\".heat-logs/apex-trigger/11.retrieve-apex-triggers.json\",\"createApexTriggerMembers\":\".heat-logs/apex-trigger/12.create-apex-trigger-members.json\",\"metadataContainerList\":\".heat-logs/metadataContainerList.json\",\"metadataTypesNoFolder\":\".heat-logs/10.metadata-types-no-folder.json\",\"metadataTypesInFolder\":\".heat-logs/11.metadata-types-in-folder.json\",\"metadataTypesFolder\":\".heat-logs/12.metadata-types-folder.json\"},\"include\":{\"StandardValueSet\":[\"AccountContactRole\",\"AccountOwnership\",\"AccountRating\",\"AccountType\",\"AssetStatus\",\"CampaignMemberStatus\",\"CampaignStatus\",\"CampaignType\",\"CaseContactRole\",\"CaseOrigin\",\"CasePriority\",\"CaseReason\",\"CaseStatus\",\"CaseType\",\"ContactRole\",\"ContractContactRole\",\"ContractStatus\",\"EntitlementType\",\"EventSubject\",\"EventType\",\"FiscalYearPeriodName\",\"FiscalYearPeriodPrefix\",\"FiscalYearQuarterName\",\"FiscalYearQuarterPrefix\",\"IdeaMultiCategory\",\"IdeaStatus\",\"Industry\",\"LeadSource\",\"LeadStatus\",\"OpportunityCompetitor\",\"OpportunityStage\",\"OpportunityType\",\"OrderStatus\",\"OrderType\",\"PartnerRole\",\"Product2Family\",\"ProcessExceptionCategory\",\"ProcessExceptionPriority\",\"ProcessExceptionSeverity\",\"ProcessExceptionStatus\",\"QuickTextCategory\",\"QuickTextChannel\",\"ResourceAbsenceType\",\"ReturnOrderLineItemProcessPlan\",\"ReturnOrderLineItemReasonForRejection\",\"ReturnOrderLineItemReasonForReturn\",\"ReturnOrderLineItemRepaymentMethod\",\"ReturnOrderShipmentType\",\"ReturnOrderStatus\",\"Salutation\",\"ServiceAppointmentStatus\",\"ServiceContractApprovalStatus\",\"ServTerrMemRoleType\",\"SolutionStatus\",\"TaskPriority\",\"TaskStatus\",\"TaskSubject\",\"TaskType\",\"WorkOrderLineItemStatus\",\"WorkOrderPriority\",\"WorkOrderStatus\",\"WorkTypeDefApptType\",\"WorkTypeGroupAddInfo\"]},\"exclude\":{\"StandardValueSet\":[\"AccountContactMultiRoles\",\"CareItemStatus2\",\"FulfillmentStatus\",\"FulfillmentType\",\"IdeaCategory1\",\"IdeaThemeStatus\",\"OrderItemSummaryChgRsn\",\"OrderSummaryRoutingSchdRsn\",\"OrderSummaryStatus\",\"QuestionOrigin1\",\"QuoteStatus\",\"RoleInTerritory2\",\"SalesTeamRole\",\"SocialPostClassification\",\"SocialPostEngagementLevel\",\"SocialPostReviewedStatus\"]}}"
}
